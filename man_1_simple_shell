<<<<<<< HEAD
.TH man 1 "14 Nov 2022" "0.32" "our own simple_shell man page"
.SH NAME
.B our own simple_shell
- We try to build our own simple shell.
.SH SYNOPSIS
It is the creation of a simple unix command interpreter that provides a user interface to access operating system services.
.SH
.SH
.SH DESCRIPTION
we use the following files to build our own simple shell:
.PP
-1.0.getppid.c (Write a program that prints the PID of the parent process.
.PP -1.1._proc_sys_kernel_pid_max - Write a shell script that prints the maximum value a process ID can be.
.PP-2.0.av.c - (Write a program that prints all the arguments, without using ac.)
.PP-2.1.Read_Line.c - (getline) Write a program that prints "$ ", wait for the user to enter a command, prints it on the next line.
.PP-2.2.command_line_to_av.c - (strtok) Write a function that splits a string and returns an array of each word of the string.
.PP-3.execve.c - Executing a program. The system call execve allows a process to execute another program (man 2 execve).
.PP-4.fork.c - The system call fork (man 2 fork) creates a new child process, almost identical to the parent (the process that calls fork).
.PP-4.1.fork.c - Using the return value of fork, it is possible to know if the current process is the father or the child: fork will return 0 to the child, and the PID of the child to the father.
.PP-5.wait.c - The wait system call (man 2 wait) suspends execution of the calling process until one of its children terminates.
.PP-6.fork+wait+execve.c - Exercise: fork + wait + execve Write a program that executes the command ls -l /tmp in 5 different child processes.
.PP-generate-authors.sh and AUTHORS. . File man_1_simple_shell - Manual for our simple shell


.SH RETURN VALUE
.SHOur Shell must return the execution in standard output of the command typed by the user
If the command doesn't exist, say "Doesn't exist".
.SH EXAMPLES TEST
we compare with printf function original our own _printf function with next examples:
.SH
.SH Examples
.SH
.SH
.SH
.SH
.SH Results
.SH
.SH
.SH
.SH
.SH ISSUES
We have a issue in check #
.SH AUTHORS
Funmilola Ajayi, Sanni Mubarak
=======
.TH man 1 "14 November 2022" "version 1.0" "simple_shell man page"
.SH NAME
.B simple_shell
- UNIX command interpreter
.SH SYNOPSIS
[command [flags] [files]]
.SH DESCRIPTION
The command interpreter simple_shell is a shell based on the sh or bash shells. It works in an interactive mode or non interactive mode,
an interactive mode means read commands from user on a terminal and A non-interactive shell is a shell that can not interact with the user.
Its most often run from a script or similar. In general starts by checking if a file descriptor refers to a terminal, then simple_shell waits
to read the line, interprets the command, if the command is valid it will be excuted, otherwise it prints and descriptive error.
Most of the commands used are located in the environment variable called PATH
.SH INITIALIZING
.PP
First of all, compile all the ".c",  files with gcc -Wextra -werror -Wall -pedantic *.c -o hsh
then you executes the hsh file, and you have your simple_shell working.

.Lp
.LP
Then it is evaluated if it is interactive or non-interactive, after this a child process is created with the fork function to execute the input command 
.Lp
Use waitpid function to wait for state changes in the child of the calling process and obtein information about of child.
.SS Built-in commands
.TP
exit [status]
Command to finished the shell program, if you specified the status it will be the last status of the program. If you do not specified it, the last
status will be the status of the last process before exit.
.TP
env
Prints the current environment.
.SH EXAMPLES INTERACTIVE MODE
.TP
Show the content of a file text.txt
.B $ /bin/cat text.txt
.TP
Show the content of the current directory
.B $ /bin/ls
.TP
Usign flags with ls command, -l shows long files and riectories in long format, -a all the directories that start with .
.B $ /bin/ls -l -a
.SH EXAMPLES NON-INTERACTIVE MODE
.TP
Show the content of the current directory
.B $ echo "/bin/ls" | ./hsh
.TP
An error example is when you type ls command with a file that does not exist, In the following the error printed is ./hsh: 1: qwerty: not found
.B $ echo "qwerty" | ./hsh
.LP
.SH EXIT STATUS
Errors that are detected by the shell, such as a syntax error, will cause the shell to exit with a non-zero exit status.
.SH BUGS
sometimes the exit command should be executed twice to works fine, or type CTRL + D more than 2 times to exit.
.SH SEE ALSO
.I sh, fork, execve, exit, fflush, free, getline, isatty, stat, strtok, wait, waitpid
.SH AUTHOR
Funmi Ajayi, Mubarak Sanni
>>>>>>> f50d4a5f86addf32832248229be70b5dc884fd38
